$color-margin: #DE6A63;
$color-padding: #C5D936;
$color-content: #63BCF8;
$color-border: #F8CC63;
$color-box-sizing: #8ADFE0;

$color-bg: #242930;
$color-dark-light: #343434;
$color-dark-lighter: #444;
$color-dark-lightest: #777;
$color-body: #808386;
$color-white: #FFFFFF;


$knob-size: 20px;
$knob-border-width: 3px;

$boxes: (content: $color-content,
         padding: $color-padding,
         border: $color-border,
         margin: $color-margin,
         box-sizing: $color-box-sizing,
         generated-size: $color-content);

$sliders: content, padding, border, margin;



/*****************************************
* CONTROL STYLES
******************************************/

// Fieldset/Legend
// ---------------------------------------

fieldset {
  border: 1px solid $color-dark-light;
  padding: 0 10px 5px;
}

#generated-size fieldset {
  min-height: 114px;
}

legend {
  text-transform: uppercase;
  font-weight: 300;
  font-size: 1.3em;
}

@each $property, $color in $boxes {
  ##{$property} {
    legend {
      color: $color;
    }
  }
}

label, .value, .toggle-text {
  font-size: 60%;
  display: inline-block;
  white-space: nowrap;
  font-family: unquote(map-get($bodytype, font-family));
  letter-spacing: 1.5px;
}

.control-set {
  margin-top: 20px;
  width: 100%;
  label, .toggle-text {
    width: 25%;
    text-transform: uppercase;
  }
  .slider {
    width: 55%;
  }
  .value {
    width: 10%;
    text-align: right;
  }
}


// Radio Button
// ---------------------------------------
.radio {
  position: relative;
  margin: 0 .5rem 0 0;
  cursor: pointer;
  &::before,
  &::after {
    @include transition(all 0.3s ease-in-out);
    content: "";
    position: absolute;
    top: -0.2rem;
    left: -0.2rem;
    z-index: 1;
    width: $knob-size;
    height: $knob-size;
    background: $color-dark-light !important;
    border-radius: 50%;
  }
  &:checked,
  &.ng-valid-parse {
    &::before {
      @include transform(scale(0, 0));
      border-color: $color-box-sizing !important;
      border-width: $knob-border-width !important;
    }
    &::after {
      border: $knob-border-width solid $color-box-sizing !important;
      background: $color-bg !important;
    }
  }
}

// Range Sliders
// ---------------------------------------
slider, [slider] {
  display: inline-block;
  position: relative;
  height: 7px;
  width: 60%;
  vertical-align: middle;
  margin: 5px;
  div {
    white-space: nowrap;
    position: absolute;
    &.handle {
      border: $knob-border-width solid;
      cursor: pointer;
      width: $knob-size;
      height: $knob-size;
      top: -8px;
      background-color: $color-bg;
      z-index: 2;
      border-radius: 100%;
      &::after {
        content: '';
        width: 8px;
        height: 8px;
        position: absolute;
        left: 6px;
        border-radius: 100%;
        background-color: transparent;
      }
      &.active::after {
        background-color: transparent;
      }
    }
    &.bar {
      width: 100%;
      height: 100%;
      border-radius: 7px;
      background: $color-dark-lighter;
      overflow: hidden;
      .selection {
        width: 0;
        height: 100%;
      }
    }
    // TODO: remove Bubble functionality from slider directive
    &.bubble {
      display: none;
      cursor: default;
      top: -22px;
      padding: 1px 3px;
      font-size: 0.7em;
      &.active {
        display: inline-block;
      }
      &.limit {
        color: $color-dark-lightest;
      }
    }
  }
}

.bubble.value.low.ng-binding.active {
  display: none;
}

.bar-color {
  height: 20px;
  border-right: 3px solid;
  box-sizing: content-box;
}

@each $property in $sliders {
  ##{$property} {
    .slider-selection, .bar-color {
      background-color: unquote(map-get($boxes, #{$property}));
    }
    .bar-color,
    .handle {
      border-color: unquote(map-get($boxes, #{$property}));
    }
  }
}

// Toggle
// ---------------------------------------
.toggle {
    display: none;
    &, &::after, &::before, & *, & *::after, & *::before, & + .toggle-control {
        box-sizing: border-box;
        &::selection {
            background: none;
        }
    }
    + .toggle-control {
        outline: 0;
        top: 10px;
        margin-bottom: 8px;
        width: 52px;
        position: relative;
        cursor: pointer;
        user-select: none;
        padding: 3px;
        @include transition(all 0.3s ease-in-out);
        background: $color-bg;
        border: $knob-border-width/2 solid $color-dark-lighter;
        border-radius: 2em;
        &::after, &::before {
            position: relative;
            display: block;
            content:"";
            width: $knob-size;
            height: $knob-size;
        }
        &::after {
            left: 0;
            @include transition(all 0.3s ease-in-out);
            background: $color-dark-light;
            border-radius: 50%;
        }
        &::before {
            display: none;
        }
    }
    &:checked {
        + .toggle-control {
            border: $knob-border-width/2 solid $color-dark-lighter;
            &::after {
                left: 50%;
                height: $knob-size;
                width: $knob-size;
                background: $color-bg;
                border: $knob-border-width solid $color-content;
            }
        }
    }
}
.toggle-text {
    vertical-align: text-bottom;
    margin-left: 5px;
}


// Generated Size Change Animation (ng-animate)
// ---------------------------------------
.generated-direction {
  display: inline-block;
  width: 150px;
}

.generated-width,
.generated-height {
  font-size: 60%;
  white-space: nowrap;
  font-family: unquote(map-get($bodytype, font-family));
  letter-spacing: 1.5px;
  text-transform: uppercase;
  .changes {
    text-transform: none;
    display: inline-block;
    line-height: 25px;
    padding: 0 5px;
    background: #2F353E;
    border-radius: 3px;
    color: $color-content;
    @include transition(color 0.4s ease-in-out, background 0.4s ease-in-out);
    &[class*="-add"] {
      color: darken($color-content, 45%);
      background: $color-content;
    }
    &.highlight {
      &.ng-enter {
        background: #2F353E;
        color: $color-content;
        &.ng-enter-active {
          color: darken($color-content, 45%);
          background: $color-content;
        }
      }
      &.ng-leave {
        color: darken($color-content, 45%);
        background: $color-content;
        &.ng-leave-active {
          background: #2F353E;
          color: $color-content;
        }
      }
    }
  }
}
